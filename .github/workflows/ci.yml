name: üß™ CI/CD for Meteoprog Weather Informers

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PLUGIN_NAME: meteoprog-weather-informers
  UID: 1001
  GID: 1001
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1

jobs:
  # 1Ô∏è‚É£ POT file
  i18n:
    name: üåê Generate POT
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: make i18n-pot
      - uses: actions/upload-artifact@v4
        with:
          name: pot-file
          path: languages/*.pot

  # 2Ô∏è‚É£ Tests matrix with DB
  tests:
    name: ‚úÖ Tests Matrix
    runs-on: ubuntu-latest
    needs: i18n

    services:
      db:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: wordpress_test_suite
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -prootpass"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=10

    strategy:
      fail-fast: false
      matrix:
        include:
          - { php: "5.6", wp: "4.9",   target: "php56-wp49" }
          # - { php: "7.4", wp: "5.8",   target: "php74-wp58" }
          # - { php: "8.1", wp: "6.8.3", target: "php81-wp683" }
          # - { php: "8.3", wp: "6.8.3", target: "php83-wp683" }

    env:
      DB_HOST: 127.0.0.1
      DB_USER: root
      DB_PASS: rootpass
      DB_NAME: wordpress_test_suite

    steps:
      - uses: actions/checkout@v4

      - name: Wait for DB ready
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -prootpass > /dev/null 2>&1 && break
            sleep 2
          done

      - name: Prepare PHP version string
        id: vars
        run: echo "PHP_VER=$(echo '${{ matrix.php }}' | tr -d '.')" >> $GITHUB_ENV

      - name: Build Docker image PHP ${{ matrix.php }}
        run: make build-php${{ env.PHP_VER }}

      - name: Run tests (WP ${{ matrix.wp }})
        run: make ${{ matrix.target }}

  # # 3Ô∏è‚É£ Nightly (optional, non-blocking)
  # nightly:
  #   name: üåô PHP 8.3 Nightly (Optional)
  #   runs-on: ubuntu-latest
  #   needs: i18n
  #   continue-on-error: true
  #   if: github.event_name != 'pull_request'

  #   services:
  #     db:
  #       image: mariadb:10.6
  #       env:
  #         MYSQL_ROOT_PASSWORD: rootpass
  #         MYSQL_DATABASE: wordpress_test_suite

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Build Docker image PHP 8.3
  #       run: make build-php83
  #     - name: Run Nightly tests
  #       run: make php83-nightly

  # # 4Ô∏è‚É£ PHPCS
  # phpcs:
  #   name: üßπ PHPCS
  #   runs-on: ubuntu-latest
  #   needs: i18n
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run: make phpcs-check

  # # 5Ô∏è‚É£ Release (build ZIP and attach to GitHub Release)
  # release:
  #   name: üöÄ Build Release ZIP
  #   runs-on: ubuntu-latest
  #   needs: [tests, phpcs]
  #   if: startsWith(github.ref, 'refs/tags/v')

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Regenerate POT file
  #       run: make i18n-pot

  #     - name: Check version matches tag
  #       run: |
  #         TAG="${GITHUB_REF#refs/tags/}"
  #         VER=$(grep -E '^ \* Version:' meteoprog-weather-informers.php | sed -E 's/^ \* Version:[[:space:]]*//')
  #         if [ "v${VER}" != "${TAG}" ]; then
  #           echo "Version mismatch: plugin=${VER}, tag=${TAG}"
  #           exit 1
  #         fi
  #         echo "Version OK: ${VER}"

  #     - name: Build dist ZIP
  #       run: make dist-docker

  #     - name: Upload release to GitHub
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         files: dist/*.zip
  #         generate_release_notes: true
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
