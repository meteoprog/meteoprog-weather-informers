name: ‚öôÔ∏è Manual Deploy Latest Release to WordPress.org

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type 'DEPLOY' to confirm deployment of the latest GitHub release"
        required: true

permissions:
  contents: read

jobs:
  # ‚öôÔ∏è Manual Deploy Latest Release to WordPress.org
  svn-deploy-manual:
    name: ‚öôÔ∏è Manual Deploy Latest GitHub Release
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.confirm == 'DEPLOY' }}

    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # üì• Download latest release ZIP
      - name: üì• Download latest release ZIP
        id: download
        uses: dsaltares/fetch-gh-release-asset@1.1.2
        with:
          repo: ${{ github.repository }}
          version: latest
          file: meteoprog-weather-informers.zip
          target: dist/meteoprog-weather-informers.zip
          token: ${{ secrets.GITHUB_TOKEN }}

      # üîç Verify that ZIP file exists
      - name: üîç Verify ZIP file
        run: |
          if [ ! -f "dist/meteoprog-weather-informers.zip" ]; then
            echo "::error::ZIP file not found ‚Äî check release assets or asset name mismatch."
            exit 1
          fi
          echo "::notice::ZIP verified: dist/meteoprog-weather-informers.zip"

      # üóúÔ∏è Extract ZIP to build/ (handles nested folder inside archive)
      - name: üóúÔ∏è Extract ZIP contents
        run: |
          rm -rf build
          mkdir -p build
          unzip -q dist/meteoprog-weather-informers.zip -d build
          entries=$(find build -mindepth 1 -maxdepth 1)
          if [ "$(echo "$entries" | wc -l)" -eq 1 ] && [ -d "$entries" ]; then
            echo "::notice::Flatten nested folder: $entries"
            shopt -s dotglob
            mv "$entries"/* build/
            rmdir "$entries"
          fi
          ls -la build

      # üßæ Extract Stable tag version from readme.txt
      - name: üßæ Extract version from readme.txt
        id: version
        run: |
          version=$(grep -i '^Stable tag:' build/readme.txt | awk '{print $3}' | tr -d '\r')
          if [ -z "$version" ]; then
            echo "::error::Stable tag not found in build/readme.txt"
            exit 1
          fi
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "::notice::Detected version from readme.txt: $version"

      # ü™∂ Log deploy source
      - name: ü™∂ Log deploy source
        run: |
          echo "::notice::Triggered by: ${{ github.actor }}"
          echo "::notice::Deploy source: latest GitHub release (manual trigger)"
          echo "::notice::Version: $VERSION"

      # üöÄ Deploy the plugin to WordPress.org via SVN (stable expects BUILD_DIR)
      - name: üïäÔ∏è Deploy to WordPress.org
        uses: 10up/action-wordpress-plugin-deploy@stable
        env:
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          BUILD_DIR: ${{ github.workspace }}/build
          VERSION: ${{ env.VERSION }}

      # ‚úÖ Log success result
      - name: ‚úÖ Deployment completed
        if: success()
        run: |
          echo "::notice::‚úÖ Deployment completed successfully!"
          echo "::notice::WordPress.org plugin page:"
          echo "::notice::https://wordpress.org/plugins/meteoprog-weather-informers/"
          echo "::notice::SVN trunk:"
          echo "::notice::https://plugins.svn.wordpress.org/meteoprog-weather-informers/trunk/"
          echo "::notice::SVN tag:"
          echo "::notice::https://plugins.svn.wordpress.org/meteoprog-weather-informers/tags/${VERSION}/"
